generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id             String          @id @default(uuid())
  foreignId      String          @unique
  name           String?
  email          String          @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  ownedPets      Pet[]           @relation("OwnerPets")
  caretakenPets  Pet[]           @relation("CaretakerPets")
  petInvitations PetInvitation[]
  medicationPlan DailyDose[]     @relation("UserMedications")
}

model PetInvitation {
  id     String           @id @default(uuid())
  petId  String
  userId String
  status InvitationStatus @default(PENDING)
  pet    Pet              @relation(fields: [petId], references: [id])
  user   User             @relation(fields: [userId], references: [id])
}

model Pet {
  id          String      @id @default(uuid())
  name        String
  species     String
  breed       String
  sex         Sex
  owners      User[]      @relation("OwnerPets")
  caretakers  User[]      @relation("CaretakerPets")
  dailyDoses  DailyDose[]
  invitations PetInvitation[]
}

model Medication {
  id         String      @id @default(uuid())
  name       String
  totalDoses Int
  doseUnit   String
  dailyDoses DailyDose[]
}

model DailyDose {
  id                      String     @id @default(uuid())
  petId                   String
  userId                  String
  medicationId            String
  dosage                  Float
  intervalMinutes         Int
  firstAdministration     DateTime?
  finalAdministration     DateTime?
  mostRecentAdministration DateTime?
  nextAdministration      DateTime?
  cumulativeAdjustment    Int        @default(0) // in minutes, to optionally adjust for doses administered too late/too early
  administeredCount       Int        @default(0)
  pet                     Pet        @relation(fields: [petId], references: [id])
  user                    User       @relation(fields: [userId], references: [id], name: "UserMedications")
  medication              Medication @relation(fields: [medicationId], references: [id])
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum Sex {
  FEMALE
  MALE
}
