// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String     @id @default(uuid())
  foreignId     String     @unique
  name          String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  pets          Pet[]      @relation("UserPets")
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Pet {
  id                 String             @id @default(uuid())
  name               String
  breed              String
  age                Int
  owners             User[]             @relation("UserPets")
  medicationSchedules MedicationSchedule[]
}

model Medicine {
  id                  String             @id @default(uuid())
  name                String
  packagingDoses      Int
  packagingUnit       String
  medicationSchedules MedicationSchedule[]
}

model MedicationSchedule {
  id                 String       @id @default(uuid())
  petId              String
  medicineId         String
  dosage             Float
  intervalMinutes    Int
  lastAdministered   DateTime
  nextAdministration DateTime
  administeredCount  Int
  pet                Pet          @relation(fields: [petId], references: [id])
  medicine           Medicine     @relation(fields: [medicineId], references: [id])
}
